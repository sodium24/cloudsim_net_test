version: "2.4"
services:
  sim:
    image: ${simImage}
    entrypoint: ""
    command: bash -c 'sudo route add -net 172.29.1.0/24 gw 172.28.1.2 eth0 && ./run_sim.bash cloudsim_sim.ign headless:=${headless} circuit:=${circuit} worldName:=${worldName} robotName1:=${robotName1} robotConfig1:=${robotConfig1}'
    cap_add: [NET_ADMIN]
    networks:
      test_net1:
        ipv4_address: 172.28.1.3
    environment:
      - DISPLAY
      - QT_X11_NO_MITSHM=1
      - XAUTHORITY=/tmp/.docker.xauth
      - IGN_PARTITION=sim
      - IGN_IP=172.28.1.3
      - IGN_RELAY=172.29.1.3
    env_file: .env  
    runtime: nvidia
    security_opt:
      - seccomp=unconfined
    volumes:
      - "/tmp/.docker.xauth:/tmp/.docker.xauth"
      - "/tmp/.X11-unix:/tmp/.X11-unix"
      - "/etc/localtime:/etc/localtime:ro"
      - "/dev/input:/dev/input" 

  test_net_bridge:
    image: netsim:latest
    command: bash -c 'tc qdisc add dev eth0 root netem delay 10ms 5ms loss random 1% 25% && tc qdisc add dev eth1 root netem delay 10ms 5ms loss random 1% 25% && ping localhost > /dev/null'
    cap_add: [NET_ADMIN]
    networks:
      test_net1:
        ipv4_address: 172.28.1.2
      test_net2:
        ipv4_address: 172.29.1.2

  bridge1:
    image: ${bridgeImage}
    entrypoint: ""
    command: bash -c 'sudo route add -net 172.28.1.0/24 gw 172.29.1.2 eth0 && ./run_bridge.bash circuit:=${circuit} worldName:=${worldName} robotName1:=${robotName1} robotConfig1:=${robotConfig1}'
    cap_add: [NET_ADMIN]
    networks:
      relay_net1:
        ipv4_address: 172.30.1.1
      test_net2:
        ipv4_address: 172.29.1.3
    environment:
      - IGN_PARTITION=sim
      - IGN_IP=172.29.1.3
      - IGN_RELAY=172.28.1.3
      - ROS_MASTER_URI=http://172.30.1.1:11311
    env_file: .env  
    depends_on:
      - "sim"
      - "test_net_bridge"

  solution1:
    image: ${solutionImage}
    networks:
      relay_net1:
        ipv4_address: 172.30.1.2
    environment:
      - ROS_MASTER_URI=http://172.30.1.1:11311
    env_file: .env  
    runtime: nvidia
    depends_on:
      - "bridge1"

networks:
  test_net1:
    ipam:
      driver: default
      config:
        - subnet: 172.28.1.0/24
  test_net2:
    ipam:
      driver: default
      config:
        - subnet: 172.29.1.0/24
  relay_net1:
    internal: true
    ipam:
      driver: default
      config:
        - subnet: 172.30.0.0/16
